import{_ as s,b as n,a,J as l}from"./chunks/framework.218694e7.js";const b=JSON.parse('{"title":"C++20 coroutines cheat sheet","description":"","frontmatter":{},"headers":[{"level":2,"title":"Library","slug":"library"},{"level":2,"title":"Concepts","slug":"concepts"},{"level":3,"title":"promise","slug":"promise"},{"level":3,"title":"coroutine","slug":"coroutine"},{"level":3,"title":"awaitable","slug":"awaitable"},{"level":3,"title":"operator co_await","slug":"operator-co-await"},{"level":2,"title":"Translation","slug":"translation"},{"level":3,"title":"Coroutine body","slug":"coroutine-body"},{"level":3,"title":"auto result = co_await expr","slug":"auto-result-co-await-expr"},{"level":3,"title":"co_yield expr","slug":"co-yield-expr"},{"level":3,"title":"co_return expr","slug":"co-return-expr"},{"level":3,"title":"co_return","slug":"co-return"}],"relativePath":"cpp20/corountines/recursive-coroutines/README.md"}'),p={name:"cpp20/corountines/recursive-coroutines/README.md"},e=l(`<h1 id="c-20-coroutines-cheat-sheet" tabindex="-1">C++20 coroutines cheat sheet <a class="header-anchor" href="#c-20-coroutines-cheat-sheet" aria-hidden="true">#</a></h1><p>See <a href="https://en.cppreference.com/w/cpp/coroutine" target="_blank" rel="noreferrer">Coroutine support</a> at <a href="http://cppreference.com" target="_blank" rel="noreferrer">cppreference.com</a> for more.</p><h2 id="library" tabindex="-1">Library <a class="header-anchor" href="#library" aria-hidden="true">#</a></h2><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">coroutine</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// coroutine_traits</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// coroutine_handle</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// noop_coroutine</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// noop_coroutine_promise</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// noop_coroutine_handle</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// suspend_never - awaitable</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// suspend_always - awaitable</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="concepts" tabindex="-1">Concepts <a class="header-anchor" href="#concepts" aria-hidden="true">#</a></h2><h3 id="promise" tabindex="-1"><code>promise</code> <a class="header-anchor" href="#promise" aria-hidden="true">#</a></h3><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Value</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">promise</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">coroutine</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Value</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">get_return_object</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">static</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">awaitable</span><span style="color:#89DDFF;">&lt;&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">initial_suspend</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">static</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">awaitable</span><span style="color:#89DDFF;">&lt;&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">final_suspend</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">noexcept</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">unhandled_exception</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // optionally either</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">return_value</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Value</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">&amp;&amp;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // or</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">return_void</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // optionally</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">awaitable</span><span style="color:#89DDFF;">&lt;&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">yield_value</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Value</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">&amp;&amp;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // optionally</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">awaitable</span><span style="color:#89DDFF;">&lt;&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">await_transform</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">AwaitTarget</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="coroutine" tabindex="-1"><code>coroutine</code> <a class="header-anchor" href="#coroutine" aria-hidden="true">#</a></h3><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Value</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">coroutine</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#F78C6C;">using</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">promise_type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Value</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">~coroutine</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">coroutine</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">coroutine</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">&amp;&amp;</span><span style="color:#A6ACCD;">that</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">coroutine</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">coroutine_handle</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Value</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">h</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="awaitable" tabindex="-1"><code>awaitable</code> <a class="header-anchor" href="#awaitable" aria-hidden="true">#</a></h3><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Value</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">awaitable</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">await_ready</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">Value</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">await_resume</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // either</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">template</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Outer</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">await_suspend</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">coroutine_handle</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Outer</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;">h</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // or</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">template</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Outer</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">await_suspend</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">coroutine_handle</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Outer</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;">h</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // or</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">template</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Outer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Other</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">coroutine_handle</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Other</span><span style="color:#89DDFF;">&gt;&gt;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">await_suspend</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">coroutine_handle</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Outer</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;">h</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="operator-co-await" tabindex="-1"><code>operator co_await</code> <a class="header-anchor" href="#operator-co-await" aria-hidden="true">#</a></h3><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// optionally</span></span>
<span class="line"><span style="color:#FFCB6B;">awaitable</span><span style="color:#89DDFF;">&lt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">operator</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">co_await</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">AwaitTarget</span><span style="color:#A6ACCD;"> value</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="translation" tabindex="-1">Translation <a class="header-anchor" href="#translation" aria-hidden="true">#</a></h2><h3 id="coroutine-body" tabindex="-1">Coroutine body <a class="header-anchor" href="#coroutine-body" aria-hidden="true">#</a></h3><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#A6ACCD;">  promise_type __promise</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">co_await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">__promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">initial_suspend</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // function body</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;"> ... </span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#F07178;">initial_await_resume_called</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">__promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unhandled_exception</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">__final_suspend:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">co_await</span><span style="color:#A6ACCD;"> __promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">final_suspend</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="auto-result-co-await-expr" tabindex="-1"><code>auto result = co_await expr</code> <a class="header-anchor" href="#auto-result-co-await-expr" aria-hidden="true">#</a></h3><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// await_transform and operator co_await calls are optional</span></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;">__expr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">operator</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">co_await</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">__promise</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">await_transform</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">expr</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#A6ACCD;">__expr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">await_ready</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">__expr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">await_suspend</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">__coroutine_handle</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // suspend/resume point</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> __expr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">await_resume</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="co-yield-expr" tabindex="-1"><code>co_yield expr</code> <a class="header-anchor" href="#co-yield-expr" aria-hidden="true">#</a></h3><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">co_await</span><span style="color:#A6ACCD;"> __promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">yield_value</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">expr</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h3 id="co-return-expr" tabindex="-1"><code>co_return expr</code> <a class="header-anchor" href="#co-return-expr" aria-hidden="true">#</a></h3><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#A6ACCD;">__promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">return_value</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">expr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">goto</span><span style="color:#A6ACCD;"> __final_suspend</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="co-return" tabindex="-1"><code>co_return</code> <a class="header-anchor" href="#co-return" aria-hidden="true">#</a></h3><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#A6ACCD;">__promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">return_void</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">goto</span><span style="color:#A6ACCD;"> __final_suspend</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,24),o=[e];function r(c,t,i,F,y,D){return a(),n("div",null,o)}var d=s(p,[["render",r]]);export{b as __pageData,d as default};
