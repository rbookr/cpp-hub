import{_ as s,b as n,a,J as l}from"./chunks/framework.218694e7.js";const A=JSON.parse('{"title":"what is CRTP","description":"","frontmatter":{},"headers":[{"level":2,"title":"what is CRTP","slug":"what-is-crtp"},{"level":2,"title":"waht CRTP can bring to your code","slug":"waht-crtp-can-bring-to-your-code"},{"level":2,"title":"\u6765\u6E90\uFF1A","slug":"\u6765\u6E90\uFF1A"}],"relativePath":"cppold/curiously_recurring_template_pattern.md"}'),p={name:"cppold/curiously_recurring_template_pattern.md"},o=l(`<p>\u76EE\u7684 \uFF1A</p><ul><li>\u90A3\u4E9B\u9700\u8981\u77E5\u9053\u5B50\u7C7B\u7C7B\u578B\u7684</li><li>enable_share_from_this ,\u516C\u7528\u5DE5\u5177\u7C7B\u62BD\u8C61</li><li>\u8BA1\u6570\u7C7B\u5BF9\u8C61\u6709\u591A\u5C11\u4E2A\uFF0C\u8FD9\u79CD\u516C\u7528\u5DE5\u5177\u7C7B\u62BD\u8C61</li><li>compile-time polymorphism ?</li></ul><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">iostream</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">type_traits</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">typename</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">A</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">say</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">static_cast&lt;</span><span style="color:#F07178;">T</span><span style="color:#89DDFF;">*&gt;(this)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">say_impl</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">B</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">A</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">B</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">say_impl</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">say B </span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> a</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">123</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">c</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    A</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> a1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    a1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">say</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // \u53EA\u6709 A&lt;B&gt; \u8FD9\u4E2A\u5B9E\u4F8Ba1 \u5B58\u5728</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // \u6CA1\u6709\u5B9A\u4E49B\u7684\u5B9E\u4F8B\uFF0C\u4E3A\u4EC0\u4E48\u53EF\u4EE5\u8C03\u7528B\u7684\u5B9E\u4F8B\u7684\u65B9\u6CD5\u5462\uFF1F:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // \u90A3\u4E3A\u4EC0\u4E48 \u5462\uFF1F</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //\u7C7B\u578B\u4E0A\u4E0D\u76F8\u7B49</span></span>
<span class="line"><span style="color:#A6ACCD;">    cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A&lt;B&gt; == B </span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">is_same_v</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">&gt;,</span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A&lt;B&gt; == B sizoef </span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">&gt;)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> pb </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">static_cast&lt;</span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">*&gt;(&amp;</span><span style="color:#A6ACCD;">a1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    pb </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">say</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> pb </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //</span></span>
<span class="line"><span style="color:#A6ACCD;">    cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> ==== B a2</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    B a2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    a2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">say</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> a2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">include</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div><h2 id="what-is-crtp" tabindex="-1">what is CRTP <a class="header-anchor" href="#what-is-crtp" aria-hidden="true">#</a></h2><ul><li>inheriting from a template class</li><li>use the derived class itself as a template parameter of the base class</li></ul><p>\u4E0D\u80FD\u51FA\u73B0\u7684\u60C5\u51B5</p><p>\u5982\u4F55\u907F\u514D</p><h2 id="waht-crtp-can-bring-to-your-code" tabindex="-1">waht CRTP can bring to your code <a class="header-anchor" href="#waht-crtp-can-bring-to-your-code" aria-hidden="true">#</a></h2><ul><li>add functionality</li></ul><p>\u8FD9\u91CC\u6211\u4E5F\u4E0D\u91CD\u590D\u7684\u53BB\u590D\u8FF0\u539F\u6587\u4E86\uFF0C\u53EF\u4EE5\u53BB\u770B\u4E00\u4E0B\u539F\u6587\uFF0C\u610F\u601D \u5C31\u662F\u63D0\u4F9B\u529F\u80FD\u6027\u7684\u4E00\u4E9B\u4E1C\u897F\uFF08\u9700\u8981\u5B50\u7C7B\u7C7B\u578B)</p><h2 id="\u6765\u6E90\uFF1A" tabindex="-1">\u6765\u6E90\uFF1A <a class="header-anchor" href="#\u6765\u6E90\uFF1A" aria-hidden="true">#</a></h2><p>\u77E5\u4E4E\uFF0C crtp \u6709\u4EC0\u4E48 \u7528</p><p><a href="https://fluentcpp.com/2017/05/12/curiously-recurring-template-pattern" target="_blank" rel="noreferrer">https://fluentcpp.com/2017/05/12/curiously-recurring-template-pattern</a></p>`,13),e=[o];function t(r,c,D,y,F,i){return a(),n("div",null,e)}var u=s(p,[["render",t]]);export{A as __pageData,u as default};
