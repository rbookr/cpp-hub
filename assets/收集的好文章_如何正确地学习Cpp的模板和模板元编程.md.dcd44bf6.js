import{_ as s,b as n,a,J as p}from"./chunks/framework.218694e7.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"\u6536\u96C6\u7684\u597D\u6587\u7AE0/\u5982\u4F55\u6B63\u786E\u5730\u5B66\u4E60Cpp\u7684\u6A21\u677F\u548C\u6A21\u677F\u5143\u7F16\u7A0B.md"}'),l={name:"\u6536\u96C6\u7684\u597D\u6587\u7AE0/\u5982\u4F55\u6B63\u786E\u5730\u5B66\u4E60Cpp\u7684\u6A21\u677F\u548C\u6A21\u677F\u5143\u7F16\u7A0B.md"},o=p(`<p>\u51FA\u5728 <a href="https://www.zhihu.com/question/23463256/answer/2281222409" target="_blank" rel="noreferrer">https://www.zhihu.com/question/23463256/answer/2281222409</a> \u200B</p><p>\u76EE\u5F55 \u521D\u63A2C++\u6A21\u677F\u5143\u7F16\u7A0B \u5143\u51FD\u6570\u548C\u5E8F\u5217 YAMPL\u7684\u57FA\u7840\u7EC4\u4EF6 \u5E8F\u5217\u548C\u8FED\u4EE3\u5668 C++\u6A21\u677F\u5143\u7F16\u7A0B\uFF0C\u901A\u5E38\u6765\u8BF4\u662F\u6307\u5229\u7528\u6A21\u677F\u63A7\u5236\u7F16\u8BD1\u5668\u4EA7\u751F\u4E34\u65F6\u6E90\u4EE3\u7801\u7684\u6280\u672F\u3002\u8BE5\u4E34\u65F6\u6E90\u4EE3\u7801\u53EF\u4EE5\u548C\u4EE5\u540E\u4EE3\u7801\u5171\u540C\u7F16\u8BD1\u4E3A\u53EF\u6267\u884C\u7A0B\u5E8F\u3002\u7531\u4E8E\u6A21\u677F\u5143\u7F16\u7A0B\u63A7\u5236\u7684\u662F\u7F16\u8BD1\u5668\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u8FC7\u7A0B\u662F\u5728\u7F16\u8BD1\u671F\u8FDB\u884C\uFF0C\u5BF9\u4E8E\u4EE3\u7801\u8FD0\u884C\u671F\u7684\u72B6\u6001\u6CA1\u6709\u5F71\u54CD\u3002</p><p>\u4F7F\u7528C++\u6A21\u677F\u5143\u7F16\u7A0B\u7F16\u5199\u7684\u7A0B\u5E8F\u6211\u4EEC\u53EF\u4EE5\u79F0\u4E4B\u4E3A\u6A21\u677F\u5143\u7A0B\u5E8F\uFF0C\u6700\u7B80\u5355\u7684\u6A21\u677F\u5143\u7A0B\u5E8F\u6211\u4EEC\u53EF\u4EE5\u5199\u6210\u8FD9\u6837\uFF1A</p><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">iostream</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">type_traits</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">mytype</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">std::is_same&lt;mytype, int&gt;::value = </span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">is_same</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">mytype</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;::</span><span style="color:#A6ACCD;">value </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5728\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D<code>std::is_same&lt;mytype, int&gt;::value</code>\u662F\u5178\u578B\u7684\u6A21\u677F\u5143\u7A0B\u5E8F\u4EE3\u7801\uFF0C\u7F16\u8BD1\u5668\u4F1A\u5728\u7F16\u8BD1\u671F\u5BF9\u8FD9\u53E5\u4EE3\u7801\u8FDB\u884C\u8BA1\u7B97\uFF0C\u6700\u7EC8\u4EA7\u751F\u4EE5\u4E0B\u4E34\u65F6\u4EE3\u7801\uFF1A</p><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">std::is_same&lt;mytype, int&gt;::value = </span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u8FDB\u4E00\u6B65\u53EF\u4EE5\u770B\u51FA\uFF0C\u7531\u4E8E<code>std::is_same&lt;mytype, int&gt;::value</code>\u5728\u7F16\u8BD1\u671F\u5DF2\u7ECF\u5F97\u51FA\u7ED3\u679C\uFF0C\u6240\u4EE5\u5B83\u5E76\u4E0D\u4F1A\u5BF9\u7A0B\u5E8F\u7684\u8FD0\u884C\u4EA7\u751F\u4EFB\u4F55\u526F\u4F5C\u7528\u3002</p><p>\u89E3\u91CA\u5230\u8FD9\u91CC\uFF0C\u6211\u60F3\u8BFB\u8005\u5E94\u8BE5\u5BF9C++\u6A21\u677F\u5143\u7F16\u7A0B\u548C\u6A21\u677F\u5143\u7A0B\u5E8F\u6709\u4E86\u4E00\u4E2A\u5927\u6982\u7684\u7406\u89E3\u3002\u5B9E\u9645\u4E0A\uFF0C\u5728\u6211\u521A\u521A\u63A5\u89E6\u5230\u6A21\u677F\u5143\u7A0B\u5E8F\u7684\u65F6\u5019\uFF0C\u6700\u7591\u60D1\u7684\u95EE\u9898\u5C31\u662F\u5B83\u4E3A\u4EC0\u4E48\u53EB\u505A\u5143\u7A0B\u5E8F\uFF08metaprogram\uFF09\u3002\u7ECF\u8FC7\u4E00\u756A\u7814\u7A76\u540E\u53D1\u73B0\uFF0Cmeta\u8D77\u6E90\u4E8E\u5E0C\u814A\u8BED\uFF0C\u6709after\u548Cbeyond\u7684\u542B\u4E49\uFF0C\u4F5C\u4E3A\u524D\u7F00\u901A\u5E38\u7528\u4E8E\u8868\u8FBE\u66F4\u9AD8\u62BD\u8C61\u6C34\u5E73\u7684\u63CF\u8FF0\u3002\u6BD4\u5982\u5728\u89E3\u91CA\u6570\u636E\u5E93\u5143\u6570\u636E\uFF08MetaData\uFF09\u65F6\uFF0C\u6211\u4EEC\u8BF4\u5B83\u662F\u5B9A\u4E49\u6570\u636E\u7684\u6570\u636E\u3002\u800C\u8054\u60F3\u5230\u5143\u7A0B\u5E8F\uFF0C\u540C\u6837\u4E5F\u53EF\u4EE5\u7406\u89E3\u4E3A\u5B9A\u4E49\u7A0B\u5E8F\u7684\u7A0B\u5E8F\u3002\u719F\u6089\u7F16\u5199\u7F16\u8BD1\u5668\u7684\u8BFB\u8005\u5E94\u8BE5\u4F1A\u63A5\u89E6\u5230flex\u548Cbison\uFF08\u6216\u8005lex\u548Cyacc\uFF09\u3002\u5B83\u4EEC\u662F\u4E00\u5BF9\u8BCD\u6CD5\u548C\u8BED\u6CD5\u7684\u89E3\u6790\u5668\u751F\u6210\u5668\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u5B9A\u4E49\u8BCD\u6CD5\u548C\u8BED\u6CD5\u89C4\u5219\u8BA9\u5B83\u4EEC\u751F\u6210\u51FA\u76F8\u5F53\u5B8C\u5584\u7684\u8BCD\u6CD5\u548C\u8BED\u6CD5\u7684\u89E3\u6790\u5668\u6E90\u4EE3\u7801\uFF0C\u6240\u4EE5flex\u548Cbison\u5C31\u662F\u4E00\u5BF9\u6700\u5178\u578B\u7684\u5143\u7A0B\u5E8F\u3002</p><p>\u6700\u65E9\u7684C++\u6A21\u677F\u5143\u7A0B\u5E8F 1994\u5E74Erwin Unruh\u5728C++\u59D4\u5458\u4F1A\u4E0A\u63D0\u4EA4\u4E86\u4E0B\u9762\u8FD9\u4EFD\u4EE3\u7801\uFF1A</p><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// Prime number computation by Erwin Unruh</span></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">i</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">D</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">D</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">*);</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">operator</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">();</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">p</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">i</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">is_prime</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">prim</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">%</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> is_prime</span><span style="color:#89DDFF;">&lt;(</span><span style="color:#F07178;">i </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> p </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">),</span><span style="color:#F07178;"> i -1&gt; :: </span><span style="color:#A6ACCD;">prim</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Prime_print</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    Prime_print</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> a</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">prim</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> is_prime</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> i-1&gt;::</span><span style="color:#A6ACCD;">prim</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">f</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> D</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> d </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> prim</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">is_prime</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">prim</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">};</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">is_prime</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">prim</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">};</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Prime_print</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">prim</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">};</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">f</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> D</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> d </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> prim</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#ifndef</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LAST</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LAST</span><span style="color:#A6ACCD;"> 10</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#endif</span></span>
<span class="line"><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    Prime_print</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">LAST</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> a</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u4ECE\u7C7B\u6A21\u677F\u547D\u540D\u4E0A\u770B\uFF0C\u5B83\u4F3C\u4E4E\u662F\u4E00\u4EFD\u6253\u5370\u8D28\u6570\u7684\u4EE3\u7801\u3002\u4F46\u662F\u8BF7\u6CE8\u610F\uFF0C\u8FD9\u4EFD\u4EE3\u7801\u5728\u73B0\u5728\u770B\u6765\u5E76\u4E0D\u7B26\u5408\u5F53\u524DC++\u7684\u8BED\u6CD5\u89C4\u8303\uFF0C\u6240\u4EE5\u662F\u65E0\u6CD5\u901A\u8FC7\u7F16\u8BD1\u7684\u3002\u5B9E\u9645\u4E0A\uFF0C\u5F53\u65F6Erwin Unruh\u4F7F\u7528\u7684\u662F\u4E00\u6B3E\u53EB\u505AMetaware Compiler\u7684\u7F16\u8BD1\u5668\u7F16\u8BD1\u7684\u4E0A\u8FF0\u4EE3\u7801\uFF0C\u867D\u7136\u4ECD\u7136\u65E0\u6CD5\u901A\u8FC7\u7F16\u8BD1\uFF0C\u4F46\u662F\u5374\u80FD\u8F93\u51FA\u4E00\u4E9B\u6709\u8DA3\u7684\u4FE1\u606F\uFF1A</p><pre><code>MetaWare High C/C++ Compiler R2.6
(c) Copyright 1987-94, MetaWare Incorporated
E &quot;primes.cpp&quot;,L16/C63(#416):   prim
|    Type \`enum{}\xB4 can\xB4t be converted to txpe \`D&lt;2&gt;\xB4 (&quot;primes.cpp&quot;,L2/C25).
-- Detected during instantiation of Prime_print&lt;30&gt; at &quot;primes.cpp&quot;,L21/C5:
E &quot;primes.cpp&quot;,L11/C25(#416):   prim
|    Type \`enum{}\xB4 can\xB4t be converted to txpe \`D&lt;3&gt;\xB4 (&quot;primes.cpp&quot;,L2/C25).
-- Detected during instantiation of Prime_print&lt;30&gt; at &quot;primes.cpp&quot;,L21/C5:
E &quot;primes.cpp&quot;,L11/C25(#416):   prim
|    Type \`enum{}\xB4 can\xB4t be converted to txpe \`D&lt;5&gt;\xB4 (&quot;primes.cpp&quot;,L2/C25).
-- Detected during instantiation of Prime_print&lt;30&gt; at &quot;primes.cpp&quot;,L21/C5:
E &quot;primes.cpp&quot;,L11/C25(#416):   prim
|    Type \`enum{}\xB4 can\xB4t be converted to txpe \`D&lt;7&gt;\xB4 (&quot;primes.cpp&quot;,L2/C25).
-- Detected during instantiation of Prime_print&lt;30&gt; at &quot;primes.cpp&quot;,L21/C5:
E &quot;primes.cpp&quot;,L11/C25(#416):   prim
|    Type \`enum{}\xB4 can\xB4t be converted to txpe \`D&lt;11&gt;\xB4 (&quot;primes.cpp&quot;,L2/C25).
-- Detected during instantiation of Prime_print&lt;30&gt; at &quot;primes.cpp&quot;,L21/C5:
E &quot;primes.cpp&quot;,L11/C25(#416):   prim
|    Type \`enum{}\xB4 can\xB4t be converted to txpe \`D&lt;13&gt;\xB4 (&quot;primes.cpp&quot;,L2/C25).
-- Detected during instantiation of Prime_print&lt;30&gt; at &quot;primes.cpp&quot;,L21/C5:
E &quot;primes.cpp&quot;,L11/C25(#416):   prim
|    Type \`enum{}\xB4 can\xB4t be converted to txpe \`D&lt;17&gt;\xB4 (&quot;primes.cpp&quot;,L2/C25).
-- Detected during instantiation of Prime_print&lt;30&gt; at &quot;primes.cpp&quot;,L21/C5:
E &quot;primes.cpp&quot;,L11/C25(#416):   prim
|    Type \`enum{}\xB4 can\xB4t be converted to txpe \`D&lt;19&gt;\xB4 (&quot;primes.cpp&quot;,L2/C25).
-- Detected during instantiation of Prime_print&lt;30&gt; at &quot;primes.cpp&quot;,L21/C5:
E &quot;primes.cpp&quot;,L11/C25(#416):   prim
|    Type \`enum{}\xB4 can\xB4t be converted to txpe \`D&lt;23&gt;\xB4 (&quot;primes.cpp&quot;,L2/C25).
-- Detected during instantiation of Prime_print&lt;30&gt; at &quot;primes.cpp&quot;,L21/C5:
E &quot;primes.cpp&quot;,L11/C25(#416):   prim
|    Type \`enum{}\xB4 can\xB4t be converted to txpe \`D&lt;29&gt;\xB4 (&quot;primes.cpp&quot;,L2/C25).
</code></pre><p>\u89C2\u5BDF\u4E0A\u9762\u8FD9\u4EFD\u7F16\u8BD1\u5668\u8F93\u51FA\u7684\u9519\u8BEF\u4FE1\u606F\uFF0C\u6211\u4EEC\u53D1\u73B0\u6BCF\u6761\u9519\u8BEF\u4FE1\u606F\u90FD\u7ED9\u51FA\u4E86\u4E00\u4E2A\u8D28\u6570\uFF0C\u4F8B\u5982D&lt;2&gt;\u3001D&lt;3&gt;\u3001D&lt;4&gt;\u7B49\u7B49\uFF0C\u8FD9\u8BF4\u660E\u7F16\u8BD1\u5668\u5728\u7F16\u8BD1\u9636\u6BB5\u5DF2\u7ECF\u5F00\u59CB\u4E86\u5BF9\u6A21\u677F\u7684\u8BA1\u7B97\u3002\u57281994\u5E74\u4E4B\u540E\uFF0CErwin Unruh\u53D1\u73B0\u4E0A\u8FF0\u4EE3\u7801\u5DF2\u7ECF\u4E0D\u80FD\u88AB\u65B0\u8BED\u6CD5\u6240\u652F\u6301\uFF0C\u6240\u4EE5\u57282002\u5E74\u53D1\u5E03\u4E86\u65B0\u4EE3\u7801\uFF1A</p><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// Prime number computation by Erwin Unruh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">i</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">D</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">D</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">*);</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">operator</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">();</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">p</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">i</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">is_prime</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">prim</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">==</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">%</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> is_prime</span><span style="color:#89DDFF;">&lt;(</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">?</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">),</span><span style="color:#F07178;"> i-1&gt; :: </span><span style="color:#A6ACCD;">prim</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">i</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Prime_print</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;"> Prime_print</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> a</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">prim</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> is_prime</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> i-1&gt;::</span><span style="color:#A6ACCD;">prim</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">f</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> D</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> d </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> prim </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">f</span><span style="color:#89DDFF;">();}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">is_prime</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">prim</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">};</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">is_prime</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">prim</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">};</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Prime_print</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">prim</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">f</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> D</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> d </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> prim </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#ifndef</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LAST</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LAST</span><span style="color:#A6ACCD;"> 18</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#endif</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;"> Prime_print</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">LAST</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> a</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">f</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>\u8FD9\u4EFD\u4EE3\u7801\u53EF\u4EE5\u7528\u8F83\u8001\u7248\u672C\u7684GCC\u7F16\u8BD1\uFF0C\u6BD4\u5982GCC 4.1\uFF0C\u540C\u6837\u7684\u5B83\u4F1A\u8BA9\u7F16\u8BD1\u5668\u8BA1\u7B97\u5E76\u6253\u5370\u51FA\u5173\u4E8E\u8D28\u6570\u7684\u9519\u8BEF\u4FE1\u606F\uFF08\u7531\u4E8E\u9519\u8BEF\u4FE1\u606F\u8FC7\u591A\u5F71\u54CD\u9605\u8BFB\uFF0C\u6240\u4EE5\u8FD9\u91CC\u7701\u7565\u4E86\u65E0\u7528\u90E8\u5206\uFF0C\u60F3\u770B\u5B8C\u6574\u9519\u8BEF\u4FE1\u606F\u7684\u8BFB\u8005\u53EF\u4EE5\u81EA\u5DF1\u5C1D\u8BD5\u7F16\u8BD1\u4E0A\u8FF0\u4EE3\u7801\u3002\uFF09\uFF1A</p><pre><code>&lt;source&gt;:12: error:   initializing argument 1 of &#39;D&lt;i&gt;::D(void*) [with int i = 17]&#39;
...
&lt;source&gt;:12: error:   initializing argument 1 of &#39;D&lt;i&gt;::D(void*) [with int i = 13]&#39;
...
&lt;source&gt;:12: error:   initializing argument 1 of &#39;D&lt;i&gt;::D(void*) [with int i = 11]&#39;
...
&lt;source&gt;:12: error:   initializing argument 1 of &#39;D&lt;i&gt;::D(void*) [with int i = 7]&#39;
...
&lt;source&gt;:12: error:   initializing argument 1 of &#39;D&lt;i&gt;::D(void*) [with int i = 5]&#39;
...
&lt;source&gt;:12: error:   initializing argument 1 of &#39;D&lt;i&gt;::D(void*) [with int i = 3]&#39;
...
&lt;source&gt;:12: error:   initializing argument 1 of &#39;D&lt;i&gt;::D(void*) [with int i = 2]&#39;
</code></pre><p>\u867D\u7136\u8FD9\u4EFD\u4EE3\u7801\u53EF\u4EE5\u4F7F\u7528GCC\u7F16\u8BD1\uFF0C\u4E0D\u8FC7\u6709\u4E9B\u9057\u61BE\u7684\u662F\uFF0C\u5B83\u4F9D\u7136\u65E0\u6CD5\u7F16\u8BD1\u6210\u529F\u3002\u4E3A\u4E86\u5F25\u8865\u8FD9\u4E2A\u7F3A\u61BE\uFF0C\u6211\u518D\u6B21\u5BF9\u8FD9\u4EFD\u4EE3\u7801\u8FDB\u884C\u4E86\u4FEE\u6539\uFF0C\u4FEE\u6539\u7684\u76EE\u7684\u6709\u4E24\u4E2A\uFF1A</p><p>\u4F7F\u7528\u73B0\u4EE3C++\u8BED\u6CD5\uFF1B \u6D88\u9664\u9519\u8BEF\u4FE1\u606F\uFF0C\u8BA9\u4EE3\u7801\u80FD\u591F\u987A\u5229\u7684\u7F16\u8BD1\u3002</p><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">args</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">prime_values</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">static</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> size </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">sizeof...(</span><span style="color:#F07178;">args</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">T</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">t</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">U</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> template </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">T...</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">R</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">add_to</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">T</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">t</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> template</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#A6ACCD;">T...</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">U</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> template</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#A6ACCD;">T...</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">R</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#C792EA;">T</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">args</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">add_to</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">t</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">U</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">args...</span><span style="color:#89DDFF;">&gt;,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">R</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#F78C6C;">using</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">R</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">t</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> args...</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">constexpr</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">is_prime2</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> n</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> n</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">n </span><span style="color:#89DDFF;">%</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">n</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">prime_list</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#F78C6C;">using</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">typename</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">prime_list</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">is_prime2</span><span style="color:#F07178;">(</span><span style="color:#FFCB6B;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">&gt;::</span><span style="color:#FFCB6B;">result</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">n</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">prime_list</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">n</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#F78C6C;">using</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span></span>
<span class="line"><span style="color:#F07178;">      typename add_to</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> n</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">                      </span><span style="color:#C792EA;">typename</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">prime_list</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">is_prime2</span><span style="color:#F07178;">(</span><span style="color:#FFCB6B;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">&gt;::</span><span style="color:#FFCB6B;">result</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">                      prime_values</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;">::result</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&gt;</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">prime_list</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#F78C6C;">using</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">prime_values</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">n</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">get_prime_list_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">typename</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">prime_list</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">n</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">n</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">&gt;::</span><span style="color:#FFCB6B;">result</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#ifndef</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LAST</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LAST</span><span style="color:#A6ACCD;"> 18</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#endif</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#pragma</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">GCC</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">diagnostic</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">push</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#pragma</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">GCC</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">diagnostic</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">warning</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">-Wsign-compare</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">DbgPrintType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#F07178;">T</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">PRINT_TYPE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> DbgPrintType&lt;x&gt;();</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">PRINT_VALUE_TYPE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> DbgPrintType&lt;decltype(x)&gt;();</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#pragma</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">GCC</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">diagnostic</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">pop</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">get_prime_list_t</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">LAST</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">PRINT_VALUE_TYPE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br></div></div><p>\u5BF9\u4E8E\u4E0D\u719F\u6089\u6A21\u677F\u5143\u7F16\u7A0B\u7684\u8BFB\u8005\u6765\u8BF4\uFF0C\u4E0A\u9762\u7684\u4EE3\u7801\u53EF\u80FD\u4E0D\u662F\u5F88\u597D\u7406\u89E3\u3002\u4E0D\u8FC7\u6CA1\u5173\u7CFB\uFF0C\u540E\u9762\u4F1A\u8BE6\u7EC6\u4ECB\u7ECD\u6A21\u677F\u5143\u7F16\u7A0B\u7684\u7EC6\u8282\u3002\u73B0\u5728\u6211\u53EA\u662F\u60F3\u8BA9\u8BFB\u8005\u770B\u5230\u6A21\u677F\u5143\u7F16\u7A0B\u7684\u5F3A\u5927\u548C\u6709\u8DA3\u4E4B\u5904\u3002</p><p>\u4F7F\u7528\u652F\u6301C++17\u6807\u51C6\u7684GCC\u53EF\u4EE5\u6210\u529F\u7F16\u8BD1\u4EE5\u4E0A\u4EE3\u7801\u5E76\u4E14\u8F93\u51FA\u4EE5\u4E0B\u8B66\u544A\u4FE1\u606F\uFF1A</p><pre><code>test.cpp: In instantiation of &#39;struct DbgPrintType&lt;prime_values&lt;17, 13, 11, 7, 5, 3, 2&gt; &gt;&#39;:
test.cpp:62:3:   required from here
test.cpp:53:24: warning: comparison of integer expressions of different signedness: &#39;long long unsigned int&#39; and &#39;int&#39; [-Wsign-compare]
53 |   enum { n = sizeof(T) &gt; -1 };
   |              ~~~~~~~~~~^~~~
</code></pre><p>\u5728\u8FD9\u4E9B\u8B66\u544A\u4FE1\u606F\u4E2D\uFF0C\u6211\u4EEC\u53EF\u4EE5\u6E05\u6670\u7684\u770B\u5230\u4E00\u7EC4\u5012\u5E8F\u7684\u8D28\u6570\u5E8F\u521717, 13, 11, 7, 5, 3, 2\u3002\u503C\u5F97\u6CE8\u610F\u7684\u662F\uFF0C\u8FD9\u6761\u8B66\u544A\u662F\u6211\u6709\u610F\u800C\u4E3A\u4E4B\u7684\uFF0C\u76EE\u7684\u662F\u4E3A\u4E86\u8BA9\u7F16\u8BD1\u5668\u6253\u5370\u51FA\u8D28\u6570\u5E8F\u5217\u3002</p><p>\u4E8B\u5B9E\u4E0A\uFF0C\u4ECE\u8BED\u6CD5\u89D2\u5EA6\u6765\u8BF4\u6A21\u677F\u5143\u7F16\u7A0B\u662F\u56FE\u7075\u5B8C\u5907\uFF08Turing Complete\uFF09\u7684\uFF0C\u4E5F\u5C31\u662F\u8BF4\u7406\u8BBA\u4E0A\u80FD\u591F\u89E3\u51B3\u6240\u6709\u53EF\u8BA1\u7B97\u7684\u95EE\u9898\u3002\u4E0D\u8FC7\u6709\u4E9B\u9057\u61BE\u7684\u662F\uFF0C\u4ECE\u7F16\u8BD1\u5668\u7684\u89D2\u5EA6\u6765\u8BF4\u6A21\u677F\u5143\u7F16\u7A0B\u662F\u56FE\u7075\u4E0D\u5B8C\u5907\u7684\uFF0C\u56E0\u4E3A\u4F5C\u4E3A\u5FAA\u73AF\u7684\u5B9E\u73B0\u65B9\u6CD5\uFF0C\u9012\u5F52\u5728\u7F16\u8BD1\u5668\u4E2D\u662F\u6709\u660E\u786E\u7684\u6DF1\u5EA6\u9650\u5236\u7684\u3002</p><p>\u8303\u578B\u7F16\u7A0B\u4E0EC++\u6A21\u677F\u5143\u7F16\u7A0B \u6CDB\u578B\u7F16\u7A0B\u662F\u4E00\u79CD\u7F16\u7A0B\u98CE\u683C\uFF0C\u5B83\u5141\u8BB8\u7A0B\u5E8F\u5458\u5728\u5F3A\u7C7B\u578B\u7A0B\u5E8F\u8BBE\u8BA1\u8BED\u8A00\u4E2D\u7F16\u5199\u4EE3\u7801\u65F6\u4F7F\u7528\u4E00\u4E9B\u4EE5\u540E\u624D\u6307\u5B9A\u7684\u7C7B\u578B\uFF0C\u5E76\u5728\u5B9E\u4F8B\u5316\u65F6\u4F5C\u4E3A\u53C2\u6570\u6307\u660E\u8FD9\u4E9B\u7C7B\u578B\u3002\u5728C++\u8BED\u8A00\u4E2D\uFF0C\u5B9E\u73B0\u8303\u578B\u7F16\u7A0B\u7684\u57FA\u7840\u5C31\u662F\u6A21\u677F\uFF0C\u6362\u53E5\u8BDD\u8BF4\u6A21\u677F\u4E5F\u662F\u4E3A\u4E86\u8BA9C++\u5177\u6709\u8303\u578B\u80FD\u529B\u800C\u8BBE\u8BA1\u7684\u3002</p><p>\u6A21\u677F\u5143\u7F16\u7A0B\u5219\u6709\u4E9B\u4E0D\u540C\uFF0C\u6B63\u5982\u6211\u4EEC\u5728\u4E0A\u6587\u4E2D\u770B\u5230\u7684\uFF0C\u5B83\u7684\u51FA\u73B0\u66F4\u50CF\u662F\u4E00\u4E2A\u610F\u5916\u800C\u5E76\u975E\u6709\u610F\u8BBE\u8BA1\u3002\u8FD9\u4E5F\u80FD\u89E3\u91CA\u6A21\u677F\u5143\u7F16\u7A0B\u7684\u8BED\u6CD5\u4E3A\u4EC0\u4E48\u5982\u6B64\u6666\u6DA9\u96BE\u61C2\u3002\u4E0D\u8FC7\u5E78\u8FD0\u7684\u662F\uFF0C\u6A21\u677F\u5143\u7F16\u7A0B\u9664\u4E86\u6666\u6DA9\u96BE\u61C2\u4E4B\u5916\uFF0C\u8FD8\u662F\u5E26\u6765\u4E86\u4E00\u4E9B\u610F\u5916\u7684\u60CA\u559C\u3002\u6BD4\u5982\u5B83\u53EF\u4EE5\u4E3A\u8303\u578B\u7F16\u7A0B\u52A0\u5165\u9759\u6001\u7C7B\u578B\u68C0\u67E5\u4EE5\u53CA\u7B56\u7565\u5B9A\u5236\u7684\u80FD\u529B\u3002</p><p>\u63A5\u4E0B\u6765\u505A\u4EC0\u4E48 \u5982\u679C\u53EA\u662F\u7528C++\u6A21\u677F\u5143\u7F16\u7A0B\u505A\u6570\u503C\u8BA1\u7B97\uFF0C\u90A3\u4E48\u6211\u6562\u80AF\u5B9A\u7684\u8BF4\u8FD9\u79CD\u8BA1\u7B97\u670990%\u662F\u51E0\u4E4E\u6CA1\u6709\u610F\u4E49\u7684\uFF0C\u56E0\u4E3A\u4F7F\u7528\u8FD0\u884C\u671F\u505A\u6570\u503C\u8BA1\u7B97\u5F80\u5F80\u662F\u66F4\u597D\u7684\u65B9\u6CD5\u3002\u800C\u771F\u6B63\u8BA9\u6A21\u677F\u5143\u7F16\u7A0B\u5177\u6709\u4EF7\u503C\u7684\u662F\u5B83\u5BF9\u7C7B\u578B\u7684\u8BA1\u7B97\u80FD\u529B\uFF0C\u901A\u8FC7\u7C7B\u578B\u8BA1\u7B97\u80FD\u591F\u8BA9\u6211\u4EEC\u7684\u4EE3\u7801\u66F4\u52A0\u901A\u7528\u4E14\u6709\u66F4\u9AD8\u7684\u8FD0\u884C\u6548\u7387\uFF0C\u5F53\u7136\u4EE3\u4EF7\u662F\u66F4\u52A0\u6666\u6DA9\u96BE\u61C2\u7684\u4EE3\u7801\uFF0C\u66F4\u957F\u7684\u7F16\u8BD1\u65F6\u95F4\uFF0C\u4EE5\u53CA\u66F4\u52A0\u590D\u6742\u7684\u9519\u8BEF\u4FE1\u606F\u3002\u4E0D\u8FC7\u8BFB\u8005\u4E5F\u4E0D\u5FC5\u62C5\u5FC3\u8FD9\u4E9B\u4EE3\u4EF7\uFF0C\u56E0\u4E3A\u540E\u7EED\u90E8\u5206\u5C31\u662F\u56F4\u7ED5\u7740\u7C7B\u578B\u8BA1\u7B97\u4EE5\u53CA\u5176\u76F8\u5173\u95EE\u9898\u5C55\u5F00\u7684\u3002</p><p>\u5728\u540E\u9762\u7684\u5185\u5BB9\u4E2D\uFF0C\u6211\u4EEC\u9996\u5148\u5C06\u63A5\u89E6\u5230\u5E8F\u5217\u548C\u5143\u51FD\u6570\u7684\u6982\u5FF5\u4EE5\u53CA\u5B83\u4EEC\u7684\u4E60\u60EF\u7528\u6CD5\u3002\u7136\u540E\u6211\u4EEC\u4F1A\u4F7F\u7528\u5E8F\u5217\u548C\u5143\u51FD\u6570\u5B8C\u6210\u57FA\u672C\u7684\u5224\u65AD\u548C\u5FAA\u73AF\u64CD\u4F5C\u3002\u4EE5\u4E0A\u662F\u6A21\u677F\u5143\u7F16\u7A0B\u7684\u57FA\u7840\u90E8\u5206\uFF0C\u5728\u6B64\u4E4B\u540E\u6211\u4EEC\u5C06\u5B9E\u73B0\u4E00\u5957\u8F7B\u91CF\u7EA7\u7684\u6A21\u677F\u5143\u7F16\u7A0B\u5E93YAMPL\uFF08Yet Another MPL\uFF09\uFF0CYAMPL\u5728\u63A5\u53E3\u4E0A\u5C06\u975E\u5E38\u63A5\u8FD1Boost\u7684MPL\u3002\u8BF7\u6CE8\u610F\uFF0C\u5B9E\u73B0YAMPL\u7684\u76EE\u7684\u5E76\u4E0D\u662F\u53D6\u4EE3MPL\uFF0C\u800C\u662F\u8BA9\u6211\u4EEC\u7262\u7262\u638C\u63E1\u6A21\u677F\u5143\u7F16\u7A0B\u7684\u4E00\u79CD\u624B\u6BB5\u3002</p><p>\u4E8B\u5B9E\u4E0A\uFF0C\u65E0\u8BBA\u4EC0\u4E48\u65F6\u5019\uFF0C\u53EA\u8981\u7528\u5230\u6A21\u677F\u5143\u7F16\u7A0B\uFF0CSTL\u7684type_traits\u548CBoost\u7684MPL\u8FD9\u4E9B\u6210\u719F\u7684\u6A21\u677F\u5143\u7F16\u7A0B\u5E93\u90FD\u5E94\u8BE5\u662F\u4F18\u5148\u8003\u8651\u7684\u5BF9\u8C61\u3002\u5176\u4E2DSTL\u7684type_traits\u4E13\u6CE8\u4E8E\u5B8C\u6210\u5173\u4E8E\u7C7B\u578B\u7684\u4E00\u4E9B\u57FA\u672C\u64CD\u4F5C\uFF0C\u5B83\u662F\u6A21\u677F\u5143\u7F16\u7A0B\u7684\u57FA\u7840\u8BBE\u65BD\uFF0C\u662F\u4E00\u4E2A\u6B63\u89C4\u6A21\u677F\u5143\u7F16\u7A0B\u7A0B\u5E8F\u5E93\u5FC5\u4E0D\u53EF\u5C11\u7684\u7EC4\u6210\u90E8\u5206\u3002\u800CBoost\u7684MPL\u5219\u662F\u4E00\u4E2A\u5F3A\u5927\u7684\u6A21\u677F\u5143\u7F16\u7A0B\u6846\u67B6\uFF0C\u5B83\u6784\u5EFA\u4E8EBoost\u7684type_traits\u7684\u57FA\u7840\u4E4B\u4E0A\uFF0C\u5E76\u4E14\u63D0\u4F9B\u4E00\u5957\u5F3A\u5927\u4E14\u8FDE\u8D2F\u7684\u5DE5\u5177\u96C6\uFF0C\u8FD9\u4E9B\u5DE5\u5177\u80FD\u8BA9C++\u6A21\u677F\u5143\u7F16\u7A0B\u53D8\u5F97\u7B80\u5355\u6709\u8DA3\u3002</p>`,29),e=[o];function t(r,c,F,y,D,i){return a(),n("div",null,e)}var m=s(l,[["render",t]]);export{A as __pageData,m as default};
