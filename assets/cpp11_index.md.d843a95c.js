import{_ as e,b as i,a as l,J as a}from"./chunks/framework.218694e7.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"cpp11/index.md"}'),t={name:"cpp11/index.md"},r=a('<ul><li>Core language features <ol><li>auto and decltype</li><li>defaulted and deleted functions</li><li>final and override</li><li>trailing return type</li><li>rvalue references</li><li>move constructors and move assignment operators</li><li>scoped enums</li><li>constexpr and literal types</li><li>list initialization</li><li>delegating and inherited constructors</li><li>brace-or-equal initializers</li><li>nullptr</li><li>long long</li><li>char16_t and char32_t</li><li>type aliases</li><li>variadic templates</li><li>generalized (non-trivial) unions</li><li>generalized PODs (trivial types and standard-layout types)</li><li>Unicode string literals</li><li>user-defined literals</li><li>attributes</li><li>lambda expressions</li><li>noexcept specifier and noexcept operator</li><li>alignof and alignas</li><li>multithreaded memory model</li><li>thread-local storage</li><li>GC interface (removed in C++23)</li><li>range-for (based on a Boost library)</li><li>static_assert (based on a Boost library)</li></ol></li></ul><p>\u6765\u81EA<a href="https://en.cppreference.com/w/cpp/11" target="_blank" rel="noreferrer">C++11 - cppreference.com</a></p>',2),n=[r];function o(s,d,c,p,_,u){return l(),i("div",null,n)}var g=e(t,[["render",o]]);export{m as __pageData,g as default};
