import{_ as s,b as n,a,J as l}from"./chunks/framework.218694e7.js";const m=JSON.parse('{"title":"MemoryPool","description":"","frontmatter":{},"headers":[{"level":2,"title":"Log","slug":"log"},{"level":2,"title":"Next","slug":"next"},{"level":2,"title":"Makefile","slug":"makefile"},{"level":2,"title":"Example","slug":"example"},{"level":2,"title":"API","slug":"api"},{"level":2,"title":"Tips","slug":"tips"}],"relativePath":"\u5947\u6280\u6DEB\u5DE7/memory_pool/MemoryPool/README.md"}'),o={name:"\u5947\u6280\u6DEB\u5DE7/memory_pool/MemoryPool/README.md"},p=l(`<h1 id="memorypool" tabindex="-1">MemoryPool <a class="header-anchor" href="#memorypool" aria-hidden="true">#</a></h1><p>\u4E00\u4E2A\u6781\u7B80\u5185\u5B58\u6C60\u5B9E\u73B0(\u57FA\u4E8EFirst Fit\u7B97\u6CD5, \u53EF\u6269\u5C55)</p><p>\u8981\u4E00\u53E3\u6C14\u9884\u5206\u914D\u5927\u5185\u5B58\u6765\u7BA1\u7406</p><h2 id="log" tabindex="-1">Log <a class="header-anchor" href="#log" aria-hidden="true">#</a></h2><ul><li>18-1-7 12.53 \u589E\u52A0\u4E86\u81EA\u52A8\u6269\u5C55 (\u5185\u5B58\u6C60\u8017\u5C3D\u65F6\u81EA\u52A8\u65B0\u6269\u5C55\u4E00\u4E2Amempoolsize\u5927\u5C0F\u7684\u5185\u5B58)</li><li>18-5-27 1.10 \u6539\u8FDB\u8F93\u51FA\u4FE1\u606F \u589E\u5F3A\u6D4B\u8BD5\u7A0B\u5E8F(\u8BE6\u89C1main.cpp)</li><li>19-3-18 11.05 \u6539\u8FDB\u683C\u5F0F, \u4FEE\u590D\u6F5C\u5728bug</li><li>19-4-1 20:46 \u589E\u52A0\u7EBF\u7A0B\u5B89\u5168\u9009\u9879, \u4FEE\u6539\u4E86\u81EA\u52A8\u6269\u5C55\u903B\u8F91.</li><li>19-10-14 21:44 reformat \u4FEE\u6539\u591A\u7EBF\u7A0B\u542F\u7528\u6A21\u5F0F(\u8BE6\u89C1\u4E0B\u9762Tips), \u79FB\u9664Calloc</li></ul><h2 id="next" tabindex="-1">Next <a class="header-anchor" href="#next" aria-hidden="true">#</a></h2><ul><li>\u4F19\u4F34\u5185\u5B58\u7BA1\u7406</li><li>\u8BFB\u5199\u9501</li></ul><h2 id="makefile" tabindex="-1">Makefile <a class="header-anchor" href="#makefile" aria-hidden="true">#</a></h2><ul><li>run_single_test \u8FD0\u884C\u5355\u7EBF\u7A0B\u6D4B\u8BD5</li><li>run_multi_test \u8FD0\u884C\u591A\u7EBF\u7A0B\u6D4B\u8BD5</li><li>run_example \u8FD0\u884Cexample.c</li></ul><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h2><div class="language-c line-numbers-mode"><button class="copy"></button><span class="lang">c</span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">memorypool.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> TAT</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> T_T</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">mem_size_t</span><span style="color:#A6ACCD;"> max_mem </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">GB </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">MB </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">KB</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">mem_size_t</span><span style="color:#A6ACCD;"> mem_pool_size </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">GB </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">500</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">MB </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">500</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">KB</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    MemoryPool </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">mp </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">MemoryPoolInit</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">max_mem</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> mem_pool_size</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> TAT </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">tat </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> TAT </span><span style="color:#89DDFF;">*)</span><span style="color:#82AAFF;">MemoryPoolAlloc</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">mp</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> TAT</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">tat</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">T_T</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2333</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tat</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">T_T</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">MemoryPoolFree</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">mp</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> tat</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">MemoryPoolClear</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">mp</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">MemoryPoolDestroy</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">mp</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-hidden="true">#</a></h2><ul><li>\u9884\u5B9A\u4E49\u5B8F</li></ul><p><code>KB</code> <code>MB</code> <code>GB</code></p><ul><li>\u5185\u5B58\u6C60</li></ul><p><code>mem_size_t</code> =&gt; <code>unsigned long long</code></p><p><code>MemoryPoolInit</code> \u53C2\u6570(<code>mem_size_t maxmempoolsize</code>, <code>mem_size_t mempoolsize</code>)</p><blockquote><p><code>maxmempoolsize</code>: \u5185\u5B58\u6C60\u5B57\u8282\u6570\u4E0A\u9650</p><p><code>mempoolsize</code>: \u5185\u5B58\u6C60\u5B57\u8282\u6570 (maxmempoolsize\u4E0Emempoolsize\u4E0D\u76F8\u7B49\u65F6\u4F1A\u81EA\u52A8\u6269\u5C55, \u76F4\u5230\u4E0A\u9650)</p></blockquote><p><code>MemoryPoolAlloc</code> \u884C\u4E3A\u4E0E\u7CFB\u7EDFmalloc\u4E00\u81F4(\u53C2\u6570\u591A\u4E86\u4E00\u4E2A)</p><p><code>MemoryPoolFree</code> \u884C\u4E3A\u4E0E\u7CFB\u7EDFfree\u4E00\u81F4(\u8FD4\u56DE\u503C0\u4E3A\u6B63\u5E38)</p><div class="language-c line-numbers-mode"><button class="copy"></button><span class="lang">c</span><pre><code><span class="line"><span style="color:#A6ACCD;">MemoryPool</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MemoryPoolInit</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">mem_size_t</span><span style="color:#A6ACCD;"> maxmempoolsize</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">mem_size_t</span><span style="color:#A6ACCD;"> mempoolsize</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">       </span><span style="color:#82AAFF;">MemoryPoolAlloc</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MemoryPool </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">mp</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">mem_size_t</span><span style="color:#A6ACCD;"> wantsize</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;">         </span><span style="color:#82AAFF;">MemoryPoolFree</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MemoryPool </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">mp</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">p</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">MemoryPool</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MemoryPoolClear</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MemoryPool </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">mp</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;">         </span><span style="color:#82AAFF;">MemoryPoolDestroy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MemoryPool </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">mp</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>\u83B7\u53D6\u5185\u5B58\u6C60\u4FE1\u606F</li></ul><p><code>MemoryPoolGetUsage</code> \u83B7\u53D6\u5F53\u524D\u5185\u5B58\u6C60\u5DF2\u4F7F\u7528\u5185\u5B58\u6BD4\u4F8B</p><p><code>MemoryPoolGetProgUsage</code> \u83B7\u53D6\u5185\u5B58\u6C60\u4E2D\u771F\u5B9E\u5206\u914D\u5185\u5B58\u6BD4\u4F8B(\u9664\u53BB\u4E86\u5185\u5B58\u6C60\u7BA1\u7406\u7ED3\u6784\u5360\u7528\u7684\u5185\u5B58)</p><div class="language-c line-numbers-mode"><button class="copy"></button><span class="lang">c</span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// \u603B\u7A7A\u95F4</span></span>
<span class="line"><span style="color:#FFCB6B;">mem_size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetTotalMemory</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MemoryPool</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> mp</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// \u5B9E\u9645\u5206\u914D\u7A7A\u95F4</span></span>
<span class="line"><span style="color:#FFCB6B;">mem_size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetUsedMemory</span><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MemoryPool </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">mp</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">float</span><span style="color:#A6ACCD;">      </span><span style="color:#82AAFF;">MemoryPoolGetUsage</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MemoryPool </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">mp</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// \u6570\u636E\u5360\u7528\u7A7A\u95F4</span></span>
<span class="line"><span style="color:#FFCB6B;">mem_size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetProgMemory</span><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MemoryPool </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">mp</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">float</span><span style="color:#A6ACCD;">      </span><span style="color:#82AAFF;">MemoryPoolGetProgUsage</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MemoryPool </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">mp</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="tips" tabindex="-1">Tips <a class="header-anchor" href="#tips" aria-hidden="true">#</a></h2><ul><li>\u53EF\u901A\u8FC7\u6CE8\u91CA<code>test.c</code>\u91CC\u7684<code>#include &quot;memorypool.h&quot;</code>\u6765\u5207\u6362\u5BF9\u6BD4\u7CFB\u7EDF<code>malloc</code> <code>free</code>\u548C\u5185\u5B58\u6C60</li><li>\u7EBF\u7A0B\u5B89\u5168(\u9700\u901A\u8FC7\u63D0\u4F9B\u7F16\u8BD1\u9009\u9879<code>-D _Z_MEMORYPOOL_THREAD_</code>\u6216\u8005<code>memorypool.h</code>\u6587\u4EF6\u589E\u52A0<code>#define _Z_MEMORYPOOL_THREAD_</code>)</li><li>\u591A\u98DF\u7528<code>MemoryPoolClear</code> (\u591A\u7EBF\u7A0B\u60C5\u51B5\u4E0B\u614E\u7528)</li><li>\u5728 <strong>2GB</strong> \u6570\u636E\u91CF <strong>\u987A\u5E8F\u5206\u914D\u91CA\u653E</strong> \u7684\u60C5\u51B5\u4E0B\u6BD4\u7CFB\u7EDF<code>malloc</code> <code>free</code>\u5E73\u5747\u5FEB <strong>30%-50%</strong> (\u98DF\u7528<code>MemoryPoolClear</code>\u6548\u679C\u66F4\u660E\u663E)</li><li><code>mem_size_t</code>\u4F7F\u7528<code>unsigned long long</code>\u4EE5\u652F\u63014GB\u4EE5\u4E0A\u5185\u5B58\u7BA1\u7406</li><li>\u5927\u91CF\u5C0F\u5757\u5185\u5B58\u5206\u914D\u4F1A\u6709 <strong>20%-30%</strong> \u5185\u5B58\u7A7A\u95F4\u635F\u5931(\u7528\u4E8E\u5B58\u50A8\u7BA1\u7406\u7ED3\u6784\u4F53)</li></ul>`,27),e=[p];function r(c,t,y,F,D,i){return a(),n("div",null,e)}var C=s(o,[["render",r]]);export{m as __pageData,C as default};
