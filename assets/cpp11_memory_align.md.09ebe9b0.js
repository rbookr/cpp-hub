import{_ as s,b as n,a,J as l}from"./chunks/framework.218694e7.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"cpp11/memory/align.md"}'),p={name:"cpp11/memory/align.md"},o=l(`<p><a href="https://en.cppreference.com/w/cpp/memory/align" target="_blank" rel="noreferrer">std::align - cppreference.com</a></p><p>\u8981\u770B\u5F53\u76EE\u5F55\u4E0B\u7684code\u4E0B\u7684 \u4E09\u4E2Acpp\u6587\u4EF6,\u5C31\u7406\u89E3\u4E86</p><p><a href="https://stackoverflow.com/a/67834958/5757674" target="_blank" rel="noreferrer">https://stackoverflow.com/a/67834958/5757674</a></p><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#C792EA;">inline</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">*</span></span>
<span class="line"><span style="color:#82AAFF;">align</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> __align</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> __size</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">*&amp;</span><span style="color:#A6ACCD;"> __ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> __space</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">noexcept</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">__space </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> __size</span><span style="color:#89DDFF;">)</span><span style="color:#676E95;font-style:italic;"> //\u5269\u4F59\u7684\u7A7A\u95F4\u4E0D\u5920</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">nullptr;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">auto</span><span style="color:#F07178;"> __intptr </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">reinterpret_cast&lt;</span><span style="color:#C792EA;">uintptr_t</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#F07178;">__ptr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  //\u6838\u5FC3\u8BA1\u7B97 (x-1 + y) &amp; -y ,\u5F97\u5230align\u500D\u6570</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">auto</span><span style="color:#F07178;"> __aligned </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">__intptr </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1u</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> __align</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;">__align</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">auto</span><span style="color:#F07178;"> __diff </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> __aligned </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> __intptr</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">__diff </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">__space </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> __size</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">nullptr;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      __space </span><span style="color:#89DDFF;">-=</span><span style="color:#F07178;"> __diff</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> __ptr </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">reinterpret_cast&lt;</span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">*&gt;(</span><span style="color:#F07178;">__aligned</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      // \u8FD4\u56DE\u7684\u503C\u662F \u5BF9\u9F50\u540E\u7684\u8D77\u70B9</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      // space \u5BF9\u9F50\u540E\u5269\u4E0B\u7684\u7A7A\u95F4</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,4),e=[o];function t(r,c,F,y,i,D){return a(),n("div",null,e)}var m=s(p,[["render",t]]);export{b as __pageData,m as default};
