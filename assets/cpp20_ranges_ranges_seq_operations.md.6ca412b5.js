import{_ as s,b as n,a,J as e}from"./chunks/framework.218694e7.js";const m=JSON.parse('{"title":"\u57FA\u672Crange\u8981\u7684\u8303\u56F4\u7684\u7B97\u6CD5","description":"","frontmatter":{},"headers":[{"level":2,"title":"Non-modifying sequence operations","slug":"non-modifying-sequence-operations"},{"level":2,"title":"Modifying sequence operations","slug":"modifying-sequence-operations"},{"level":2,"title":"Partitioning operations","slug":"partitioning-operations"},{"level":2,"title":"Binary search operations (on sorted ranges)","slug":"binary-search-operations-on-sorted-ranges"}],"relativePath":"cpp20/ranges/ranges_seq_operations.md"}'),p={name:"cpp20/ranges/ranges_seq_operations.md"},l=e(`<h1 id="\u57FA\u672Crange\u8981\u7684\u8303\u56F4\u7684\u7B97\u6CD5" tabindex="-1">\u57FA\u672Crange\u8981\u7684\u8303\u56F4\u7684\u7B97\u6CD5 <a class="header-anchor" href="#\u57FA\u672Crange\u8981\u7684\u8303\u56F4\u7684\u7B97\u6CD5" aria-hidden="true">#</a></h1><p><a href="https://en.cppreference.com/w/cpp/algorithm/ranges" target="_blank" rel="noreferrer">Constrained algorithms (since C++20) - cppreference.com</a></p><h2 id="non-modifying-sequence-operations" tabindex="-1">Non-modifying sequence operations <a class="header-anchor" href="#non-modifying-sequence-operations" aria-hidden="true">#</a></h2><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">std::ranges::any_of</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::all_of</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::none_of</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>1.cpp</p><ul><li><code>std::ranges::for_each</code></li><li><code>std::ranges::for_each_n</code></li></ul><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">template&lt;std::input_iterator I, std::sentinel_for&lt;I&gt; S, class Proj = std::identity,</span></span>
<span class="line"><span style="color:#A6ACCD;">  std::indirectly_unary_invocable&lt;std::projected&lt;I, Proj&gt;&gt; Fun&gt;.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>2.cpp</p><p>\u4EC0\u4E48\u662F</p><ul><li><code>std::identity</code></li><li><code>std::indirectly_unary_invocable</code></li><li><code>std::projected</code></li></ul><p>\u7EC4\u5408\u8D77\u8FC7\u6EE4\u4F20\u9012\u8FC7\u6765\u7684\u53C2\u6570</p><p>3.cpp</p><ul><li><code>std::ranges::count</code>, <code>std::ranges::count_if</code>,</li></ul><p>4.cpp</p><ul><li><code>std::ranges::mismatch</code></li></ul><p>5.cpp</p><ul><li><code>std::ranges::equal</code></li></ul><p>6.cpp</p><ul><li><code>std::ranges::lexicographical_compare</code> ,\u5B57\u5178\u5E8F\u6BD4\u8F83</li></ul><p>7.cpp</p><ul><li><code>std::ranges::find</code> ,</li><li><code>std::ranges::find_if</code> ,</li><li><code>std::ranges::find_if_not</code> ,</li></ul><p>c++23</p><ul><li><code>std::ranges::find_last</code></li><li><code>std::ranges::find_last_if</code></li><li><code>std::ranges::find_last_if_not</code></li></ul><p>8.cpp</p><p>\u4EC0\u4E48\u662F<code>ranges::borrowed_subrange_t&lt;R1&gt;</code>\u7C7B\u578B?</p><ul><li><code>std::ranges::find_end</code></li></ul><p>9.cpp</p><ul><li><code>std::ranges::search</code></li></ul><p>10.cpp</p><ul><li><code>std::ranges::find_first_of</code></li></ul><p>11.cpp</p><ul><li><code>std::ranges::adjacent_find</code></li></ul><p>12.cpp,c++23</p><ul><li><p><code>std::ranges::contains, std::ranges::contains_subrange</code></p></li><li><p><code>ranges::starts_with</code>\u5E95\u5C42\u662F<code>ranges::equal</code></p></li><li><p><code>ranges::ends_with</code> \u5E95\u5C42\u662F<code>ranges::equal</code></p></li></ul><h2 id="modifying-sequence-operations" tabindex="-1">Modifying sequence operations <a class="header-anchor" href="#modifying-sequence-operations" aria-hidden="true">#</a></h2><p>13.cpp</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">std::ranges::copy</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::copy_if</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::copy_result</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::copy_if_result</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>14.cpp</p><ul><li><code>std::ranges::copy_n</code></li></ul><p>15.cpp</p><p><code>std::ranges::copy_backward</code> \u590D\u5236\u5230\u540E\u9762</p><p>16.cpp</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">std::ranges::move</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::move_backward</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>17.cpp</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">fill</span></span>
<span class="line"><span style="color:#A6ACCD;">fill_n</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>18.cpp</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">std::ranges::transform</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::unary_transform_result</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::binary_transform_result</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8F6C\u5316 \u53EF\u4EE51\u8F6C1 \u53EF\u4EE52\u8F6C1</p><p>19.cpp</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">std::ranges::generate</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::generate_n</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u751F\u6210:\u628A\u7ED3\u679C\u7ED9\u6BCF\u4E2A\u5143\u7D20\u8D4B\u503C \u6CE8\u610F\u4E0E<code>std::iota()</code>\u7684\u533A\u522B,\u8FD8\u6709<code>std::ranges::iota() c++23</code></p><p>20.cpp</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">std::ranges::remove       -&gt; value</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::remove_if    -&gt; callable</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5220\u9664\u6240\u6709\u7B26\u5408\u6761\u4EF6\u7684\u5143\u7D20,\u4E0D\u662F\u771F\u7684\u5220\u9664,\u53EA\u662F\u79FB\u52A8</p><p>21.cpp</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">std::ranges::remove_copy</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::remove_copy_if</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::remove_copy_result</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::remove_copy_if_result</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5FFD\u7565\u7B26\u5408\u7684\u6761\u4EF6</p><p>22.cpp</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">std::ranges::replace</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::replace_if</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::replace_copy</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::replace_copy_if    -&gt; \u6240\u6709\u5143\u7D20\u90FD\u4F1A\u66FF\u6362</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::replace_copy_result</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::replace_copy_if_result</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u66FF\u6362\u5143\u7D20</p><p>23.cpp</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">std::ranges::swap_ranges</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::swap_ranges_result</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u533A\u95F4\u4E0E\u533A\u95F4\u91CC\u7684\u503C\u8FDB\u884C\u66FF\u6362</p><p>24.cpp</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">std::ranges::reverse</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::reverse_copy</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u9006\u5E8F</p><p>25.cpp</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">std::ranges::rotate</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::rotate_copy</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u65CB\u8F6C,\u5DE6\u65CB,\u53F3\u65CB\u53EA\u662F\u9009\u53D6\u7684\u70B9\u4E0D\u4E00\u6837</p><p>26.cpp</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">std::ranges::shuffle</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::shift_left</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::shift_right</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>27.cpp</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">std::ranges::sample</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>\u6837\u672C</p><p>28.cpp</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">std::ranges::unique</span></span>
<span class="line"><span style="color:#A6ACCD;">std::ranges::unique_copy</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u76F8\u90BB\u7684\u5143\u7D20<code>unique</code>,\u5982\u679C\u8981\u6240\u6709\u7684\u5143\u7D20unique,\u9700\u8981<code>sort</code></p><h2 id="partitioning-operations" tabindex="-1">Partitioning operations <a class="header-anchor" href="#partitioning-operations" aria-hidden="true">#</a></h2><p>30.cpp</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">ranges::is_partitioned determines if the range is partitioned by the given predicate</span></span>
<span class="line"><span style="color:#A6ACCD;">ranges::partition divides a range of elements into two groups</span></span>
<span class="line"><span style="color:#A6ACCD;">ranges::partition_copy copies a range dividing the elements into two groups</span></span>
<span class="line"><span style="color:#A6ACCD;">ranges::stable_partition divides elements into two groups while preserving their relative order</span></span>
<span class="line"><span style="color:#A6ACCD;">ranges::partition_point locates the partition point of a partitioned range</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="binary-search-operations-on-sorted-ranges" tabindex="-1">Binary search operations (on sorted ranges) <a class="header-anchor" href="#binary-search-operations-on-sorted-ranges" aria-hidden="true">#</a></h2><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">ranges::lower_bound \u7B2C\u4E00&gt;= k \u7684\u4F4D\u7F6E</span></span>
<span class="line"><span style="color:#A6ACCD;">ranges::upper_bound \u7B2C\u4E00&gt; k \u7684\u4F4D\u7F6E</span></span>
<span class="line"><span style="color:#A6ACCD;">ranges::binary_search  --&gt; bool \u662F\u5426\u5B58\u5728</span></span>
<span class="line"><span style="color:#A6ACCD;">ranges::equal_range \u76F8\u7B49\u7684\u533A\u95F4</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,82),r=[l];function c(i,o,t,d,u,b){return a(),n("div",null,r)}var C=s(p,[["render",c]]);export{m as __pageData,C as default};
