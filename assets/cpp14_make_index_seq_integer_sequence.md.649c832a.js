import{_ as s,b as n,a,J as l}from"./chunks/framework.218694e7.js";const A=JSON.parse('{"title":"\u8F85\u52A9\u6A21\u677F(Helper templates)","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u8F85\u52A9\u6A21\u677F(Helper templates)","slug":"\u8F85\u52A9\u6A21\u677F-helper-templates"}],"relativePath":"cpp14/make_index_seq/integer_sequence.md"}'),p={name:"cpp14/make_index_seq/integer_sequence.md"},e=l(`<p>c++14\u52A0\u5165\u7684\u4E00\u4E2A\u7C7B\u6A21\u677F</p><p>\u4F5C\u7528: \u4EA7\u751F\u4E00\u4E2Acompile-time\u7684\u4E00\u4E2A\u6574\u6570\u5E8F\u5217,\u5B83\u4F5C\u4E3A\u4E00\u4E2A\u7C7B,\u4F5C\u4E3A \u6A21\u677F\u51FD\u6570\u7684\u7684\u53C2\u6570\u7684\u65F6\u5019,\u6A21\u677F\u53C2\u6570\u5305\u53EF\u4EE5be deduced(\u88AB\u63A8\u65AD)\u51FA\u6765\u5404\u4E2A\u6574\u6570\u662F\u4EC0\u4E48,\u8FDB\u800C\u88AB\u4F7F\u7528</p><p>\u53EF\u80FD\u5B9E\u73B0\u4EE3\u7801</p><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">typename</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">T</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ints</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">integer_sequence</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">using</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">value_type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">static</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">constexpr</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">noexcept</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">sizeof...(</span><span style="color:#F07178;">ints</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">iostream</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">typename</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">T</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ints</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">integer_sequence</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">using</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">value_type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">static</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">constexpr</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">noexcept</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">sizeof...(</span><span style="color:#F07178;">ints</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">typename</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">T</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ints</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">integer_sequence</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ints... </span><span style="color:#89DDFF;">&gt;){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">((</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> ints </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> //fold expression</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cout  </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">integer_sequence</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{}</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">make_index_sequence</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="\u8F85\u52A9\u6A21\u677F-helper-templates" tabindex="-1">\u8F85\u52A9\u6A21\u677F(Helper templates) <a class="header-anchor" href="#\u8F85\u52A9\u6A21\u677F-helper-templates" aria-hidden="true">#</a></h2><ul><li><code>index_sequence</code> \u6307\u5B9A\u4E86T\u662F<code>std::size_t</code>\u7684<code>integer_sequence</code></li><li>0-N\u7684\u5E8F\u5217,\u7C7B\u578B\u81EA\u5DF1\u6307\u5B9A<code>make_integer_sequence</code> \u8868\u793A<code>using make_integer_sequence = std::integer_sequence&lt;T, /* a sequence 0, 1, 2, ..., N-1 */ &gt;;</code></li><li>0-N\u7684\u5E8F\u5217<code>make_index_sequence = std::make_integer_sequence&lt;std::size_t, N&gt;;</code></li><li>\u8F6C\u6362\u4EFB\u610F\u6A21\u677F\u53C2\u6570\u5305\u4E3A\u4E00\u4E2A\u5E8F\u5217<code>index_sequence_for = std::make_index_sequence&lt;sizeof...(T)&gt;;</code></li></ul><h1 id="make-index-sequence-\u7684\u5B9E\u73B0" tabindex="-1"><code>make_index_sequence</code> \u7684\u5B9E\u73B0 <a class="header-anchor" href="#make-index-sequence-\u7684\u5B9E\u73B0" aria-hidden="true">#</a></h1><p>\u770B <a href="./make_index_sequence\u539F\u7406.html"><code>./make_index_sequence\u539F\u7406.md</code></a></p><p>\u5B9E\u73B01: \u4EE5\u9012\u5F52\u7684\u65B9\u5F0F\u8FDB\u884C\u7C7B\u578B\u5C55\u5F00(\u67E5\u627E)</p><p>\u5B9E\u73B02: \u4EE5\u7EE7\u627F\u7684\u65B9\u5F0F\u5F97\u5230\u7C7B\u578B</p><p>gcc\u7684\u5B9E\u73B0</p><p>__integer_pack (length) When used as the pattern of a pack expansion within a template definition, expands to a template argument pack containing integers from 0 to length-1. This is provided for efficient implementation of std::make_integer_sequence.</p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">template&lt;typename Tp,Tp... _Num&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">using make_integer_sequence = integer_sequence&lt;_Tp, __integer_pack(_Num)...&gt;;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">/* author: Rainboy email: rainboylvx@qq.com  time: 2022\u5E74 01\u6708 27\u65E5 \u661F\u671F\u56DB 23:47:35 CST */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">bits/stdc++.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">long</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">long</span><span style="color:#A6ACCD;"> ll</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> maxn </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1e6</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">maxe </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1e6</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //\u70B9\u4E0E\u8FB9\u7684\u6570\u91CF</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> n</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">m</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* \u5B9A\u4E49\u5168\u5C40\u53D8\u91CF */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">template</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">typename</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">T</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ints</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">int_seq</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">integer_sequence</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">__integer_pack</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">ints</span><span style="color:#A6ACCD;">)...</span><span style="color:#89DDFF;">&gt;;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //using make_integer_sequence</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//#if __has_builtin(__make_integer_seq)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      //= __make_integer_seq&lt;integer_sequence, _Tp, _Num&gt;;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//#else</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      //= integer_sequence&lt;_Tp, __integer_pack(_Num)...&gt;;</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> argc</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> argv</span><span style="color:#89DDFF;">[]){</span></span>
<span class="line"><span style="color:#A6ACCD;">    int_seq</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">int_seq</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">&gt;::</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div>`,15),o=[e];function t(c,r,F,y,i,D){return a(),n("div",null,o)}var u=s(p,[["render",t]]);export{A as __pageData,u as default};
